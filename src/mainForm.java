
import java.util.Arrays;
import java.util.Random;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Lahiruka Wijesinghe | 2017/IS/098 | 17020982
 */
public class mainForm extends javax.swing.JFrame {

    /**
     * Creates new form mainForm
     */
    public mainForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        txtArray = new javax.swing.JTextPane();
        btnGenerateArray = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        txtLinear = new javax.swing.JTextField();
        txtJump = new javax.swing.JTextField();
        txtBinary = new javax.swing.JTextField();
        txtInterpol = new javax.swing.JTextField();
        btnLinear = new javax.swing.JButton();
        btnJump = new javax.swing.JButton();
        btnBinary = new javax.swing.JButton();
        btnInterpol = new javax.swing.JButton();
        lblArr = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtIndexOfInterpol = new javax.swing.JTextField();
        txtIndexOfLinear = new javax.swing.JTextField();
        txtIndexOfJump = new javax.swing.JTextField();
        txtIndexOfBinary = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("RunTimeCalculator");
        setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane3.setViewportView(txtArray);

        btnGenerateArray.setText("Generate Array");
        btnGenerateArray.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateArrayActionPerformed(evt);
            }
        });

        jLabel1.setText("Linear Search");

        jLabel2.setText("Jump Search");

        jLabel3.setText("Binary Search");

        jLabel4.setText("Interpolation Search");

        txtLinear.setBackground(new java.awt.Color(255, 204, 204));

        txtJump.setBackground(new java.awt.Color(204, 255, 255));

        txtBinary.setBackground(new java.awt.Color(204, 204, 255));

        txtInterpol.setBackground(new java.awt.Color(255, 255, 204));

        btnLinear.setBackground(new java.awt.Color(255, 0, 102));
        btnLinear.setText(">");
        btnLinear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLinearActionPerformed(evt);
            }
        });

        btnJump.setBackground(new java.awt.Color(0, 255, 255));
        btnJump.setText(">");
        btnJump.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnJumpActionPerformed(evt);
            }
        });

        btnBinary.setBackground(new java.awt.Color(0, 0, 255));
        btnBinary.setText(">");
        btnBinary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBinaryActionPerformed(evt);
            }
        });

        btnInterpol.setBackground(new java.awt.Color(255, 255, 0));
        btnInterpol.setText(">");
        btnInterpol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInterpolActionPerformed(evt);
            }
        });

        lblArr.setText("__");

        jLabel6.setText("Array generated in :");

        jLabel5.setText("Index : ");

        jLabel7.setText("Search Time :");

        txtIndexOfInterpol.setBackground(new java.awt.Color(255, 255, 153));

        txtIndexOfLinear.setBackground(new java.awt.Color(255, 153, 153));

        txtIndexOfJump.setBackground(new java.awt.Color(153, 255, 255));

        txtIndexOfBinary.setBackground(new java.awt.Color(153, 153, 255));

        jLabel8.setText("Enter any number from Array to search");

        jLabel9.setText("(nano seconds)");

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnLinear))
                                .addComponent(txtLinear, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtIndexOfLinear, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtIndexOfJump, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtJump, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnJump)))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBinary))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtIndexOfBinary, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtBinary, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtInterpol, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnInterpol))
                    .addComponent(txtIndexOfInterpol, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnGenerateArray)
                                        .addGap(44, 44, 44)
                                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(328, 328, 328)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblArr, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGenerateArray)
                            .addComponent(btnClear))
                        .addGap(86, 86, 86)
                        .addComponent(jLabel8)
                        .addGap(6, 6, 6)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lblArr))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnLinear)
                                        .addComponent(jLabel2)
                                        .addComponent(btnJump)
                                        .addComponent(jLabel3)
                                        .addComponent(btnBinary)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtIndexOfBinary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtIndexOfJump, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtIndexOfLinear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(39, 39, 39))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(btnInterpol))
                                .addGap(18, 18, 18)
                                .addComponent(txtIndexOfInterpol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLinear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtJump, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBinary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtInterpol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jLabel5)
                        .addGap(46, 46, 46)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void createRandomArray() {
        Random rd = new Random();
        int[] arr = new int[10000];
        for (int i = 0; i < arr.length; i++) {
            arr[i] = rd.nextInt(1000000);
        }
        Arrays.sort(arr);
        txtArray.setText(Arrays.toString(arr));
    }

    private void btnGenerateArrayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateArrayActionPerformed
        long startTime = System.nanoTime();
        createRandomArray();
        long endTime = System.nanoTime();

        long duration = (endTime - startTime);
        lblArr.setText(String.valueOf(duration));
    }//GEN-LAST:event_btnGenerateArrayActionPerformed

    public static int linearSearch(int[] array, int number) {
        for (int i = 0; i < 10000; i++) {
            if (array[i] == number) {
                return i;
            }
        }
        return -1;
    }

    public static int jumpSearch(int[] array, int number) {
        int jumpStep = (int) Math.sqrt(array.length);
        int prevStep = 0;

        while (array[Math.min(jumpStep, array.length) - 1] < number) {
            prevStep = jumpStep;
            jumpStep += (int) (Math.sqrt(array.length));
            if (prevStep >= array.length) {
                return -1;
            }
        }
        while (array[prevStep] < number) {
            prevStep++;
            if (prevStep == Math.min(jumpStep, array.length)) {
                return -1;
            }
        }
        if (array[prevStep] == number) {
            return prevStep;
        }
        return -1;
    }

    public static int binarySearch(int[] array, int number) {
        int first, last, middle, i;
        i = array.length;
        first = 0;
        last = i - 1;
        middle = (first + last) / 2;

        while (first <= last) {
            if (array[middle] < number) {
                first = middle + 1;
            } else if (array[middle] == number) {
                return middle + 1;
            } else {
                last = middle - 1;
            }
            middle = (first + last) / 2;
        }
        return -1;
    }

    public static int interpolSearch(int[] array, int number) {
        int highEnd = array.length - 1;
        int lowerEnd = 0;

        while (number >= array[lowerEnd] && number <= array[highEnd] && lowerEnd <= highEnd) {
            int probe = lowerEnd + (highEnd - lowerEnd) * (number - array[lowerEnd]) / (array[highEnd] - array[lowerEnd]);
            if (highEnd == lowerEnd) {
                if (array[lowerEnd] == number) {
                    return lowerEnd;
                } else {
                    return -1;
                }
            }

            if (array[probe] == number) {
                return probe;
            }

            if (array[probe] < number) {
                lowerEnd = probe + 1;
            } else {
                highEnd = probe - 1;
            }
        }
        return -1;

    }

    public static int[] fromString(String string) {
        String[] str = string.replace("[", "").replace("]", "").split(", ");
        int res[] = new int[str.length];
        for (int i = 0; i < res.length; i++) {
            res[i] = Integer.parseInt(str[i]);
        }
        return res;
    }

    private void btnLinearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLinearActionPerformed
        long startTime = System.nanoTime();
        int num = Integer.parseInt(txtSearch.getText());

        String s = txtArray.getText();
        int[] arr = fromString(s);
        int i = linearSearch(arr, num);
        txtIndexOfLinear.setText(String.valueOf(i));

        long endTime = System.nanoTime();
        long duration = (endTime - startTime);
        txtLinear.setText(String.valueOf(duration));
    }//GEN-LAST:event_btnLinearActionPerformed

    private void btnJumpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnJumpActionPerformed
        long startTime = System.nanoTime();
        int num = Integer.parseInt(txtSearch.getText());

        String s = txtArray.getText();
        int[] arr = fromString(s);
        int i = jumpSearch(arr, num);
        txtIndexOfJump.setText(String.valueOf(i));

        long endTime = System.nanoTime();
        long duration = (endTime - startTime);
        txtJump.setText(String.valueOf(duration));
    }//GEN-LAST:event_btnJumpActionPerformed

    private void btnBinaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBinaryActionPerformed
        long startTime = System.nanoTime();
        int num = Integer.parseInt(txtSearch.getText());

        String s = txtArray.getText();
        int[] arr = fromString(s);
        int i = linearSearch(arr, num);
        txtIndexOfBinary.setText(String.valueOf(i));

        long endTime = System.nanoTime();
        long duration = (endTime - startTime);
        txtBinary.setText(String.valueOf(duration));
    }//GEN-LAST:event_btnBinaryActionPerformed

    private void btnInterpolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInterpolActionPerformed
        long startTime = System.nanoTime();
        int num = Integer.parseInt(txtSearch.getText());

        String s = txtArray.getText();
        int[] arr = fromString(s);
        int i = linearSearch(arr, num);
        txtIndexOfInterpol.setText(String.valueOf(i));

        long endTime = System.nanoTime();
        long duration = (endTime - startTime);
        txtInterpol.setText(String.valueOf(duration));
    }//GEN-LAST:event_btnInterpolActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        lblArr.setText("");
        txtArray.setText("");
        txtBinary.setText("");
        txtIndexOfBinary.setText("");
        txtIndexOfInterpol.setText("");
        txtIndexOfJump.setText("");
        txtIndexOfLinear.setText("");
        txtInterpol.setText("");
        txtJump.setText("");
        txtLinear.setText("");
        txtSearch.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBinary;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnGenerateArray;
    private javax.swing.JButton btnInterpol;
    private javax.swing.JButton btnJump;
    private javax.swing.JButton btnLinear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblArr;
    private javax.swing.JTextPane txtArray;
    private javax.swing.JTextField txtBinary;
    private javax.swing.JTextField txtIndexOfBinary;
    private javax.swing.JTextField txtIndexOfInterpol;
    private javax.swing.JTextField txtIndexOfJump;
    private javax.swing.JTextField txtIndexOfLinear;
    private javax.swing.JTextField txtInterpol;
    private javax.swing.JTextField txtJump;
    private javax.swing.JTextField txtLinear;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
